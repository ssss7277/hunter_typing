// ひらがなからローマ字へ変換
function kana2romeArray(kana){
  var kanamap = {
      'あ' : ['a'],
      'い' : ['i'],
      'う' : ['u'],
      'え' : ['e'],
      'お' : ['o'],
      'か' : ['k', 'a'],
      'き' : ['k', 'i'],
      'く' : ['k', 'u'],
      'け' : ['k', 'e'],
      'こ' : ['k', 'o'],
      'さ' : ['s', 'a'],
      'し' : [["s","h", "i"], ["s", "i"]],
      'す' : ['s', 'u'],
      'せ' : ['s', 'e'],
      'そ' : ['s', 'o'],
      'た' : ['t', 'a'],
      'ち' : [["c","h", "i"], ["t", "i"]],
      'つ' : [["t","s", "u"], ["t", "u"]],
      'て' : ['t', 'e'],
      'と' : ['t', 'o'],
      'な' : ['n', 'a'],
      'に' : ['n', 'i'],
      'ぬ' : ['n', 'u'],
      'ね' : ['n', 'e'],
      'の' : ['n', 'o'],
      'は' : ['h', 'a'],
      'ひ' : ['h', 'i'],
      'ふ' : [["f", "u"], ["h", "u"]],
      'へ' : ['h', 'e'],
      'ほ' : ['h', 'o'],
      'ま' : ['m', 'a'],
      'み' : ['m', 'i'],
      'む' : ['m', 'u'],
      'め' : ['m', 'e'],
      'も' : ['m', 'o'],
      'や' : ['y', 'a'],
      'ゆ' : ['y', 'u'],
      'よ' : ['y', 'o'],
      'ら' : ['r', 'a'],
      'り' : ['r', 'i'],
      'る' : ['r', 'u'],
      'れ' : ['r', 'e'],
      'ろ' : ['r', 'o'],
      'わ' : ['w', 'a'],
      'ゐ' : ['w', 'i'],
      'ゑ' : ['w', 'e'],
      'を' : ["w', 'o"],
      'ん' : ['n', 'n'],
      'が' : ['g', 'a'],
      'ぎ' : ['g', 'i'],
      'ぐ' : ['g', 'u'],
      'げ' : ['g', 'e'],
      'ご' : ['g', 'o'],
      'ざ' : ['z', 'a'],
      'じ' : [["j", "i"], ["z", "i"]],
      'ず' : ['z', 'u'],
      'ぜ' : ['z', 'e'],
      'ぞ' : ['z', 'o'],
      'だ' : ['d', 'a'],
      'ぢ' : [["j", "i"], ["d", "i"]],
      'づ' : [["z", "u"], ["d", "u"]],
      'で' : ['d', 'e'],
      'ど' : ['d', 'o'],
      'ば' : ['b', 'a'],
      'び' : ['b', 'i'],
      'ぶ' : ['b', 'u'],
      'べ' : ['b', 'e'],
      'ぼ' : ['b', 'o'],
      'ぱ' : ['p', 'a'],
      'ぴ' : ['p', 'i'],
      'ぷ' : ['p', 'u'],
      'ぺ' : ['p', 'e'],
      'ぽ' : ['p', 'o'],
      'きゃ' : ['k', 'y', 'a'],
      'きぃ' : ['k', 'y', 'i'],
      'きゅ' : ['k', 'y', 'u'],
      'きぇ' : ['k', 'y', 'e'],
      'きょ' : ['k', 'y', 'o'],
      'くぁ' : ['q', 'a'],
      'くぃ' : ['q', 'i'],
      'くぇ' : ['q', 'e'],
      'くぉ' : ['q', 'o'],
      'くゃ' : ['q', 'y', 'a'],
      'くゅ' : ['q', 'y', 'u'],
      'くょ' : ['q', 'y', 'o'],
      'しゃ' : [["s", "h", "a"], ["s", "y", "a"]],
      'しぃ' : ['s', 'y', 'i'],
      'しゅ' : [["s", "h", "u"], ["s", "y", "u"]],
      'しぇ' : ['s', 'y', 'e'],
      'しょ' : [["s", "h", "o"], ["s", "y", "o"]],
      'ちゃ' : [["c", "h", "a"], ["t", "y", "a"], ["c", "y", "a"]],
      'ちぃ' : ['t', 'y', 'i'],
      'ちゅ' : [["c", "h", "u"], ["t", "y", "u"], ["c", "y", "u"]],
      'ちぇ' : ['t', 'y', 'e'],
      'ちょ' : [["c", "h", "o"], ["t", "y", "o"], ["c", "y", "o"]],
      'てゃ' : ['t', 'h', 'a'],
      'てぃ' : ['t', 'h', 'i'],
      'てゅ' : ['t', 'h', 'u'],
      'てぇ' : ['t', 'h', 'e'],
      'てょ' : ['t', 'h', 'o'],
      'ひゃ' : ['h', 'y', 'a'],
      'ひぃ' : ['h', 'y', 'i'],
      'ひゅ' : ['h', 'y', 'u'],
      'ひぇ' : ['h', 'y', 'e'],
      'ひょ' : ['h', 'y', 'o'],
      'ふぁ' : ['f', 'a'],
      'ふぃ' : ['f', 'i'],
      'ふぇ' : ['f', 'e'],
      'ふぉ' : ['f', 'o'],
      'みゃ' : ['m', 'y', 'a'],
      'みぃ' : ['m', 'y', 'i'],
      'みゅ' : ['m', 'y', 'u'],
      'みぇ' : ['m', 'y', 'e'],
      'みょ' : ['m', 'y', 'o'],
      'ヴぁ' : ['v', 'a'],
      'ヴぃ' : ['v', 'i'],
      'ヴぇ' : ['v', 'e'],
      'ヴぉ' : ['v', 'o'],
      'ぎゃ' : ['g', 'y', 'a'],
      'ぎぃ' : ['g', 'y', 'i'],
      'ぎゅ' : ['g', 'y', 'u'],
      'ぎぇ' : ['g', 'y', 'e'],
      'ぎょ' : ['g', 'y', 'o'],
      'じゃ' : [["j", "a"], ["z", "y", "a"]],
      'じぃ' : ['z', 'y', 'i'],
      'じゅ' : [["j", "u"], ["z", "y", "u"]],
      'じぇ' : ['z', 'y', 'e'],
      'じょ' : [["j", "o"], ["z", "y", "o"]],
      'ぢゃ' : [["d", "y", "a"], ["z", "y", "a"]],
      'ぢぃ' : ['d', 'y', 'i'],
      'ぢゅ' : ['d', 'y', 'u'],
      'ぢぇ' : ['d', 'y', 'e'],
      'ぢょ' : ['d', 'y', 'o'],
      'びゃ' : ['b', 'y', 'a'],
      'びぃ' : ['b', 'y', 'i'],
      'びゅ' : ['b', 'y', 'u'],
      'びぇ' : ['b', 'y', 'e'],
      'びょ' : ['b', 'y', 'o'],
      'ぴゃ' : ['p', 'y', 'a'],
      'ぴぃ' : ['p', 'y', 'i'],
      'ぴゅ' : ['p', 'y', 'u'],
      'ぴぇ' : ['p', 'y', 'e'],
      'ぴょ' : ['p', 'y', 'o'],
      'ぁ' : ['x', 'a'],
      'ぃ' : ['x', 'i'],
      'ぅ' : ['x', 'u'],
      'ぇ' : ['x', 'e'],
      'ぉ' : ['x', 'o'],
      'ゃ' : ['x', 'y', 'a'],
      'ゅ' : ['x', 'y', 'u'],
      'ょ' : ['x', 'y', 'o'],
      'っ' : ['x', 't', 'u'],
      'ヴ' : ['v', 'u'],
      'ー' : ['-'],
      '、' : [', '],
      '，' : [', '],
      '。' : ['.']
  };
  var rome_array = [];
  for (var i = 0; i < kana.length; i++) {
    rome_array.push(kanamap[kana.charAt(i)]);
  }
  return rome_array;
}

// 配列を合体させて文字列にする
function romeArray2string(rome_array){
  for (var i = 0; i < rome_array.length; i++) {
    if (Array.isArray(rome_array[i][0])){
      rome_array[i] = rome_array[i][0];
    };
  }
  rome_array = rome_array.flat();
  rome_array.join("");
  return rome_array.join("");
}

//ローマ字からひらがなへ変換
var roman2hiragana = {
  'a':'あ', 'i':'い', 'u':'う', 'e':'え', 'o':'お',
  'ka':'か', 'ki':'き', 'ku':'く', 'ke':'け', 'ko':'こ',
  'sa':'さ', 'si':'し', 'su':'す', 'se':'せ', 'so':'そ',
  'ta':'た', 'ti':'ち', 'tu':'つ', 'te':'て', 'to':'と', 'chi':'ち', 'tsu':'つ',
  'na':'な', 'ni':'に', 'nu':'ぬ', 'ne':'ね', 'no':'の',
  'ha':'は', 'hi':'ひ', 'hu':'ふ', 'he':'へ', 'ho':'ほ', 'fu':'ふ',
  'ma':'ま', 'mi':'み', 'mu':'む', 'me':'め', 'mo':'も',
  'ya':'や', 'yi':'い', 'yu':'ゆ', 'ye':'いぇ', 'yo':'よ',
  'ra':'ら', 'ri':'り', 'ru':'る', 're':'れ', 'ro':'ろ',
  'wa':'わ', 'wyi':'ゐ', 'wu':'う', 'wye':'ゑ', 'wo':'を',
  'nn':'ん',
  'ga':'が', 'gi':'ぎ', 'gu':'ぐ', 'ge':'げ', 'go':'ご',
  'za':'ざ', 'zi':'じ', 'zu':'ず', 'ze':'ぜ', 'zo':'ぞ', 'ji':'じ',
  'da':'だ', 'di':'ぢ', 'du':'づ', 'de':'で', 'do':'ど',
  'ba':'ば', 'bi':'び', 'bu':'ぶ', 'be':'べ', 'bo':'ぼ',
  'pa':'ぱ', 'pi':'ぴ', 'pu':'ぷ', 'pe':'ぺ', 'po':'ぽ',
  'kya':'きゃ', 'kyu':'きゅ', 'kyo':'きょ',
  'sya':'しゃ', 'syu':'しゅ', 'syo':'しょ',
  'tya':'ちゃ', 'tyi':'ちぃ', 'tyu':'ちゅ', 'tye':'ちぇ', 'tyo':'ちょ', 'cha':'ちゃ', 'chu':'ちゅ', 'che':'ちぇ', 'cho':'ちょ',
  'nya':'にゃ', 'nyi':'にぃ', 'nyu':'にゅ', 'nye':'にぇ', 'nyo':'にょ',
  'hya':'ひゃ', 'hyi':'ひぃ', 'hyu':'ひゅ', 'hye':'ひぇ', 'hyo':'ひょ',
  'mya':'みゃ', 'myi':'みぃ', 'myu':'みゅ', 'mye':'みぇ', 'myo':'みょ',
  'rya':'りゃ', 'ryi':'りぃ', 'ryu':'りゅ', 'rye':'りぇ', 'ryo':'りょ',
  'gya':'ぎゃ', 'gyi':'ぎぃ', 'gyu':'ぎゅ', 'gye':'ぎぇ', 'gyo':'ぎょ',
  'zya':'じゃ', 'zyi':'じぃ', 'zyu':'じゅ', 'zye':'じぇ', 'zyo':'じょ',
  'ja':'じゃ', 'ju':'じゅ', 'je':'じぇ', 'jo':'じょ', 'jya':'じゃ', 'jyi':'じぃ', 'jyu':'じゅ', 'jye':'じぇ', 'jyo':'じょ',
  'dya':'ぢゃ', 'dyi':'ぢぃ', 'dyu':'ぢゅ', 'dye':'ぢぇ', 'dyo':'ぢょ',
  'bya':'びゃ', 'byi':'びぃ', 'byu':'びゅ', 'bye':'びぇ', 'byo':'びょ',
  'pya':'ぴゃ', 'pyi':'ぴぃ', 'pyu':'ぴゅ', 'pye':'ぴぇ', 'pyo':'ぴょ',
  'fa':'ふぁ', 'fi':'ふぃ', 'fe':'ふぇ', 'fo':'ふぉ',
  'fya':'ふゃ', 'fyu':'ふゅ', 'fyo':'ふょ',
  'xa':'ぁ', 'xi':'ぃ', 'xu':'ぅ', 'xe':'ぇ', 'xo':'ぉ', 'la':'ぁ', 'li':'ぃ', 'lu':'ぅ', 'le':'ぇ', 'lo':'ぉ',
  'xya':'ゃ', 'xyu':'ゅ', 'xyo':'ょ',
  'xtu':'っ', 'xtsu':'っ',
  'wi':'うぃ', 'we':'うぇ',
  'va':'ヴぁ', 'vi':'ヴぃ', 'vu':'ヴ', 've':'ヴぇ', 'vo':'ヴぉ'
};

/*
* roman -> hiragana
*
* @param (String) roman:
* @return (String): hiragana
*/
function r2h(roman) {
  var i, iz, match, regex,
      hiragana = '', table = roman2hiragana;

  regex = new RegExp((function(table){
    var key,
        s = '^(?:';

    for (key in table) if (table.hasOwnProperty(key)) {
      s += key + '|';
    }
    return s + '(?:n(?![aiueo]|y[aiueo]|$))|' + '([^aiueon])\\1)';
  })(table));
  for (i = 0, iz = roman.length; i < iz; ++i) {
    if (match = roman.slice(i).match(regex)) {
      if (match[0] === 'n') {
        hiragana += 'ん';
      } else if (/^([^n])\1$/.test(match[0])) {
        hiragana += 'っ';
        --i;
      } else {
        hiragana += table[match[0]];
      }
      i += match[0].length - 1;
    } else {
      hiragana += roman[i];
    }
  }
  return hiragana;
};



//var rome_q = ["gonn","reorio","kirua","kuroro","goreinu","kurapika","mitosann","togasiyosihiro","kumo","annkokutairiku","kurutazoku","kujiratou","yanngasu"];
//var kana_q_array = ["ごん","れおりお","きるあ","くろろ","ごれいぬ","くらぴか","みとさん","とがしよしひろ","くも","あんこくたいりく","くるたぞく","くじらとう","やんがす"];
var rome_q_array = get_question()["rome"];
var kana_q_array = get_question()["kana"];
var q_no = Math.floor( Math.random() * rome_q_array.length);
var rome_q = romeArray2string(rome_q_array[q_no]);
var kana_q_no = q_no;
var q_i = 0;
var kana_q_i = 0;
var q_len = rome_q.length;
var kana_q_len = kana_q_array[q_no].length;
var typing_characters = [];

// 効果音
const ok_sounds_url = "<%=audio_path('/ok.mp3')%>"
const ok = new Audio(ok_sounds_url);
const bad_sounds_url = "<%=audio_path('/bad.mp3')%>"
const bad = new Audio(bad_sounds_url);
const good_sounds_url = "<%=audio_path('/good.mp3')%>"
const good = new Audio(good_sounds_url);

// カウントダウン
var timer_ID;
var time = 60;

// 得点
var score = 0;
var state = true;
function dispScore() {
  document.getElementById("totalScore").textContent = score;
}

window.addEventListener("keydown", push_Keydown);

function push_Keydown(event){

  var keyCode = event.key;
  //スタート時に問題を表示する
  if (q_i == 0){
    document.getElementById("rome").innerHTML = rome_q.substring(q_i, q_len);
    document.getElementById("kana").innerHTML = kana_q_array[kana_q_no].substring(kana_q_i, kana_q_len);
    document.getElementsByClassName("hunter")[0].innerHTML = kana_q_array[kana_q_no].substring(kana_q_i, kana_q_len);
  }

  //正解の入力をされた場合
  if (rome_q.charAt(q_i) == keyCode) {
    good.currentTime = 0;
    good.play();
    //keycodeをtyping_character配列に入れる
    typing_characters.push(keyCode);
    q_i++;
    document.getElementById("rome").innerHTML = rome_q.substring(q_i, q_len);

    //typing_characters配列の要素がひらがなになっているならば
    var Linking = typing_characters.join("");
    console.log(Linking);
    console.log(kana_q_array[kana_q_no].substring(kana_q_i, kana_q_i+1));

    if (r2h(Linking) == kana_q_array[kana_q_no].substring(kana_q_i, kana_q_i+1)){
      // kana_q_array配列の一文字目の表示を消す
      kana_q_i++;
      document.getElementById("kana").innerHTML = kana_q_array[kana_q_no].substring(kana_q_i, kana_q_len);
      document.getElementsByClassName("hunter")[0].innerHTML = kana_q_array[kana_q_no].substring(kana_q_i, kana_q_len);
      //typing_charactersを空っぽにする
      typing_characters = [];
    }

    //最後まで打ち終わった場合
    if (q_len == q_i){
      ok.play();
      score++;
      dispScore();
      q_no = Math.floor( Math.random() * rome_q_array.length);
      rome_q = romeArray2string(rome_q_array[q_no]);
      kana_q_no = q_no;
      q_i = 0;
      kana_q_i = 0;
      q_len = rome_q.length;
      kana_q_len = kana_q_array[q_no].length;
      document.getElementById("rome").innerHTML = rome_q.substring(q_i, q_len);
      document.getElementById("kana").innerHTML = kana_q_array[kana_q_no].substring(kana_q_i, kana_q_len);
      document.getElementsByClassName("hunter")[0].innerHTML = kana_q_array[kana_q_no].substring(kana_q_i, kana_q_len);
    }
  }else{
    bad.currentTime = 0;
    bad.play();
  }
}

// カウントダウンの設定
function minusTime() {
  time--;
  dispTime();
  if (time==0) {
    clearInterval(timer_ID);
  }
}

function dispTime() {
  document.getElementsByTagName("output")[0].innerHTML = time;
}

// キー入力するとカウントダウンが開始
window.addEventListener('keypress',function(e) {
  dispTime();
  timer_ID = setInterval("minusTime()", 1000);
  }, {
  once: true
});

// 表示切り替えボタン
function janSwitching() {
  if (document.all.jan.style.display == "none") {
    document.all.jan.style.display = "block"
  } else {
    document.all.jan.style.display = "none"
  }
}

function romeSwitching() {
  if (document.all.rome.style.display == "none") {
    document.all.rome.style.display = "block"
  } else {
    document.all.rome.style.display = "none"
  }
}

function get_question(){
  path_name = location.pathname;
  kana_q_arrays = [];
  if(path_name=="/nomal_easy" || path_name=="/rank_easy"){
    kana_q_arrays = ["ごん", "きるあ", "くらぴか", "れおりお"];
  }else if(path_name=="/nomal_medium" || path_name=="/rank_medium"){
    kana_q_arrays = ["りょだん"];
  }else if(path_name=="/nomal_hard" || path_name=="/rank_hard"){
    kana_q_arrays = ["はんぞー"];
  }
  var rome_qs = [];
  for (var i = 0; i < kana_q_arrays.length; i++) {
    //ひらがなからローマ字へ変換
    rome_qs.push(kana2romeArray(kana_q_arrays[i]));
  }
  questions = {
    "kana" : kana_q_arrays,
    "rome" : rome_qs
  }

  return questions;
}
